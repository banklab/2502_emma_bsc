
initialize() {
initializeSLiMOptions(keepPedigrees = T);
initializeMutationRate(1e-5);
initializeMutationType("m1", 0.5, "f", 0.0);
initializeGenomicElementType("g1", m1, 1.0);
initializeGenomicElement(g1, 0, 99999);
initializeRecombinationRate(1e-7);
}

mateChoice() {
// Prefer relatives as mates
return weights * (individual.relatedness(sourceSubpop.individuals) + 0.01); // the +0.01 ensures that we do not multiply by 0
}

1 early() {
sim.addSubpop("p1", 10);
}

2:49 early() {
	newSize = asInteger(p1.individualCount * 1.1); //increas popsize every generation by the factor 1.1
	if (newSize >= 140) 
	{
			newSize = 140;
	}	
	p1.setSubpopulationSize(newSize);
	cat("Population size =" + size(p1.individuals) +  "\n");
}

50 late() {
// Print mean heterozygosity across the population
heterozygosity = calcHeterozygosity(p1.genomes);
cat("Mean heterozygosity = " + heterozygosity + "\n");
}





