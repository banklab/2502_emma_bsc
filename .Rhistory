par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the axis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
#Compute median & quartiles (25 and 75 %)
#the 1 means i want to apply the functions over the rows of my table and ignoring NA values (na.rm = TRUE)
#first for the heterozygosity values
het_med_nrnr <- apply(het_matrix_nrnr, 1, median, na.rm = TRUE)
het_p25_nrnr <- apply(het_matrix_nrnr, 1, function(x) quantile(x, 0.25, na.rm = TRUE))
het_p75_nrnr <- apply(het_matrix_nrnr, 1, function(x) quantile(x, 0.75, na.rm = TRUE))
het_med_nrr  <- apply(het_matrix_nrr,  1, median, na.rm = TRUE)
het_p25_nrr  <- apply(het_matrix_nrr,  1, function(x) quantile(x, 0.25, na.rm = TRUE))
het_p75_nrr  <- apply(het_matrix_nrr,  1, function(x) quantile(x, 0.75, na.rm = TRUE))
het_med_r    <- apply(het_matrix_r,    1, median, na.rm = TRUE)
het_p25_r    <- apply(het_matrix_r,    1, function(x) quantile(x, 0.25, na.rm = TRUE))
het_p75_r    <- apply(het_matrix_r,    1, function(x) quantile(x, 0.75, na.rm = TRUE))
#And now for relatedness values
rel_med_nrnr <- apply(rel_matrix_nrnr, 1, median, na.rm = TRUE)
rel_p25_nrnr <- apply(rel_matrix_nrnr, 1, function(x) quantile(x, 0.25, na.rm = TRUE))
rel_p75_nrnr <- apply(rel_matrix_nrnr, 1, function(x) quantile(x, 0.75, na.rm = TRUE))
rel_med_nrr  <- apply(rel_matrix_nrr,  1, median, na.rm = TRUE)
rel_p25_nrr  <- apply(rel_matrix_nrr,  1, function(x) quantile(x, 0.25, na.rm = TRUE))
rel_p75_nrr  <- apply(rel_matrix_nrr,  1, function(x) quantile(x, 0.75, na.rm = TRUE))
rel_med_r    <- apply(rel_matrix_r,    1, median, na.rm = TRUE)
rel_p25_r    <- apply(rel_matrix_r,    1, function(x) quantile(x, 0.25, na.rm = TRUE))
rel_p75_r    <- apply(rel_matrix_r,    1, function(x) quantile(x, 0.75, na.rm = TRUE))
# Create a vector for the x-values (generations) - this will be used for the x axis of the plot.
x_vals <- 1:100
#Make the plot for the rel values
#define max and min values
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_rel <- min(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
plot(x_vals, rel_med_nrnr, type = "n",
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_rel, max_rel)
)
#Draw median (solid line) and quartiles (dashed lines)
# Model: non-random non-related
#when running with 1000 individuals, change size of the blue, dashed lines (lwd = 2), to make them visible behind the orange ones.
lines(x_vals, rel_med_nrnr, col = "#54BFB7FF", lwd = 2.5, lty = 1) #lwd is line width, lty is line type
lines(x_vals, rel_p25_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
lines(x_vals, rel_p75_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
# Model: non-random related
lines(x_vals, rel_med_nrr, col = "#894B33FF", lwd = 2.5, lty = 1)
lines(x_vals, rel_p25_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
lines(x_vals, rel_p75_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
# Model: random
lines(x_vals, rel_med_r, col = "tan1", lwd = 2.5, lty = 1) #change lty to 4 when running it with 1000 individuals
lines(x_vals, rel_p25_r, col = "tan1", lwd = 1.5, lty = 3)
lines(x_vals, rel_p75_r, col = "tan1", lwd = 1.5, lty = 3)
text(x = par("usr")[1], y = par("usr")[4], labels = "A", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
#ANd exactly the same for the het values
#define max and min values
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
#Make a plot with the median and the 25/75% as dashed lines
plot(x_vals, het_med_nrnr, type = "n",
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het + 0.0003) #add 0.0003 to y, such that the "B" is not above the data
)
#For het values
# Model: non-random non-related
#when running with 1000 individuals, change size of the blue, dashed lines (lwd = 2), to make them visible behind the orange ones.
lines(x_vals, het_med_nrnr, col = "#54BFB7FF", lwd = 2.5, lty = 1) #lwd is line width, lty is line type
lines(x_vals, het_p25_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
lines(x_vals, het_p75_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
# Model: non-random related
lines(x_vals, het_med_nrr, col = "#894B33FF", lwd = 2.5, lty = 1)
lines(x_vals, het_p25_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
lines(x_vals, het_p75_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
# Model: random
#When running the code with 1000 individuals, change lty to 4 (not 1), to visualize the blue line behind it.
lines(x_vals, het_med_r, col = "tan1", lwd = 2, lty = 3)
lines(x_vals, het_p25_r, col = "tan1", lwd = 1.5, lty = 3)
lines(x_vals, het_p75_r, col = "tan1", lwd = 1.5, lty = 3)
#Add a shared main
mtext("Relatedness and Heterozygosity Over Time \n (median & 25/75% - 16 individuals)", side = 3, line = -2, outer = TRUE, cex = 1.2, font = 2) #creates a shared title - change number of individuals!
#font.main = 2 makes the main bold
#Add the legend
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE, ncol     = 3,
legend = c("nrnr median", "nrnr 25/75%", "nrr median", "nrr 25/75%", "r median","r 25/75%"),
col    = c("#54BFB7FF", "#54BFB7FF",
"#894B33FF", "#894B33FF",
"tan1",       "tan1"),
lty    = c(1, 2, 1, 2, 1, 2), #change fifth digit to 4 when running with 1000 individuals
lwd    = c(2.5, 1.5, 2.5, 1.5, 2.5, 1.5),
bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
text(x = par("usr")[1], y = par("usr")[4], labels = "B", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title and some space at the bottom to add a legend outside of the plots.
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the axis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
#Compute median & quartiles (25 and 75 %)
#the 1 means i want to apply the functions over the rows of my table and ignoring NA values (na.rm = TRUE)
#first for the heterozygosity values
het_med_nrnr <- apply(het_matrix_nrnr, 1, median, na.rm = TRUE)
het_p25_nrnr <- apply(het_matrix_nrnr, 1, function(x) quantile(x, 0.25, na.rm = TRUE))
het_p75_nrnr <- apply(het_matrix_nrnr, 1, function(x) quantile(x, 0.75, na.rm = TRUE))
het_med_nrr  <- apply(het_matrix_nrr,  1, median, na.rm = TRUE)
het_p25_nrr  <- apply(het_matrix_nrr,  1, function(x) quantile(x, 0.25, na.rm = TRUE))
het_p75_nrr  <- apply(het_matrix_nrr,  1, function(x) quantile(x, 0.75, na.rm = TRUE))
het_med_r    <- apply(het_matrix_r,    1, median, na.rm = TRUE)
het_p25_r    <- apply(het_matrix_r,    1, function(x) quantile(x, 0.25, na.rm = TRUE))
het_p75_r    <- apply(het_matrix_r,    1, function(x) quantile(x, 0.75, na.rm = TRUE))
#And now for relatedness values
rel_med_nrnr <- apply(rel_matrix_nrnr, 1, median, na.rm = TRUE)
rel_p25_nrnr <- apply(rel_matrix_nrnr, 1, function(x) quantile(x, 0.25, na.rm = TRUE))
rel_p75_nrnr <- apply(rel_matrix_nrnr, 1, function(x) quantile(x, 0.75, na.rm = TRUE))
rel_med_nrr  <- apply(rel_matrix_nrr,  1, median, na.rm = TRUE)
rel_p25_nrr  <- apply(rel_matrix_nrr,  1, function(x) quantile(x, 0.25, na.rm = TRUE))
rel_p75_nrr  <- apply(rel_matrix_nrr,  1, function(x) quantile(x, 0.75, na.rm = TRUE))
rel_med_r    <- apply(rel_matrix_r,    1, median, na.rm = TRUE)
rel_p25_r    <- apply(rel_matrix_r,    1, function(x) quantile(x, 0.25, na.rm = TRUE))
rel_p75_r    <- apply(rel_matrix_r,    1, function(x) quantile(x, 0.75, na.rm = TRUE))
# Create a vector for the x-values (generations) - this will be used for the x axis of the plot.
x_vals <- 1:100
#Make the plot for the rel values
#define max and min values
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_rel <- min(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
plot(x_vals, rel_med_nrnr, type = "n",
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_rel, max_rel)
)
#Draw median (solid line) and quartiles (dashed lines)
# Model: non-random non-related
#when running with 1000 individuals, change size of the blue, dashed lines (lwd = 2), to make them visible behind the orange ones.
lines(x_vals, rel_med_nrnr, col = "#54BFB7FF", lwd = 2.5, lty = 1) #lwd is line width, lty is line type
lines(x_vals, rel_p25_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
lines(x_vals, rel_p75_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
# Model: non-random related
lines(x_vals, rel_med_nrr, col = "#894B33FF", lwd = 2.5, lty = 1)
lines(x_vals, rel_p25_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
lines(x_vals, rel_p75_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
# Model: random
lines(x_vals, rel_med_r, col = "tan1", lwd = 2.5, lty = 1) #change lty to 4 when running it with 1000 individuals
lines(x_vals, rel_p25_r, col = "tan1", lwd = 1.5, lty = 3)
lines(x_vals, rel_p75_r, col = "tan1", lwd = 1.5, lty = 3)
text(x = par("usr")[1], y = par("usr")[4], labels = "A", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
#ANd exactly the same for the het values
#define max and min values
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
#Make a plot with the median and the 25/75% as dashed lines
plot(x_vals, het_med_nrnr, type = "n",
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het + 0.0003) #add 0.0003 to y, such that the "B" is not above the data
)
#For het values
# Model: non-random non-related
#when running with 1000 individuals, change size of the blue, dashed lines (lwd = 2), to make them visible behind the orange ones.
lines(x_vals, het_med_nrnr, col = "#54BFB7FF", lwd = 2.5, lty = 1) #lwd is line width, lty is line type
lines(x_vals, het_p25_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
lines(x_vals, het_p75_nrnr, col = "#54BFB7FF", lwd = 1.5, lty = 3)
# Model: non-random related
lines(x_vals, het_med_nrr, col = "#894B33FF", lwd = 2.5, lty = 1)
lines(x_vals, het_p25_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
lines(x_vals, het_p75_nrr, col = "#894B33FF", lwd = 1.5, lty = 3)
# Model: random
#When running the code with 1000 individuals, change lty to 4 (not 1), to visualize the blue line behind it.
lines(x_vals, het_med_r, col = "tan1", lwd = 2, lty = 1)
lines(x_vals, het_p25_r, col = "tan1", lwd = 1.5, lty = 3)
lines(x_vals, het_p75_r, col = "tan1", lwd = 1.5, lty = 3)
#Add a shared main
mtext("Relatedness and Heterozygosity Over Time \n (median & 25/75% - 16 individuals)", side = 3, line = -2, outer = TRUE, cex = 1.2, font = 2) #creates a shared title - change number of individuals!
#font.main = 2 makes the main bold
#Add the legend
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE, ncol     = 3,
legend = c("nrnr median", "nrnr 25/75%", "nrr median", "nrr 25/75%", "r median","r 25/75%"),
col    = c("#54BFB7FF", "#54BFB7FF",
"#894B33FF", "#894B33FF",
"tan1",       "tan1"),
lty    = c(1, 2, 1, 2, 1, 2), #change fifth digit to 4 when running with 1000 individuals
lwd    = c(2.5, 1.5, 2.5, 1.5, 2.5, 1.5),
bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
text(x = par("usr")[1], y = par("usr")[4], labels = "B", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
rm(list=ls(all=TRUE)) #clear R environment
#All of the following were done with recombination rate of 1e-7
#This one is for 8-500 ind, mating for 100 gen
#setwd("/tmp/server_data")
#This one is for 8-500 ind, mating for 5000 generations
#setwd("/tmp/server_data_model25000")
#This one is for 8-100 ind, mating for 1000 generations
#setwd("/tmp/server_data_model2_100_1000")
#This one is for 8-62 ind, mating for 100 gen
#setwd("/tmp/server_data_model2_62_100")
#This one is for 8-62 ind, mating for 100 Gen RANDOM
setwd("/tmp/server_data_model2_62_100_r")
#This one is for a recombination rate of 1e-6 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-6_model2")
#This one is for a recombination rate of 1e-8 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-8_model2")
#This one is for a recombination rate of 1e-9 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-9_model2")
# find all the SLiM output files
files <- list.files(pattern = "model2_reps")
# loop through and extract metrics -> I want to extract relatedness at the beginning and heterozygosity at the end
#lapply applies following function to all the files
res_list <- lapply(files, function(f){
dat <- read.table(f, header = FALSE)  #no header in the files
data.frame(
relatedness_start   = dat[1, 2],
relatedness_end = dat[2,2],
heterozygosity_start = dat[1,3],
heterozygosity_end  = dat[2, 3]
)
})
# bind the values into one data.frame
df <- do.call(rbind, res_list)
par(mfrow = c(1,2))
# quick base‐R scatterplot
#First for starting relatedness to end heterozygosity
plot(
df$relatedness_start,
df$heterozygosity_end,
xlab = "Starting relatedness",
ylab = "End heterozygosity",
main = "Rel start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit (regression line)
abline(lm(heterozygosity_end ~ relatedness_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "A", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation -> test for significant correlqtion
pearson_res <- cor.test(
df$relatedness_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
# quick base‐R scatterplot
#Another one for starting heterozygosity to end heterozygosity
plot(
df$heterozygosity_start,
df$heterozygosity_end,
xlab = "Starting heterozygosity",
ylab = "End heterozygosity",
main = "Het start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit
abline(lm(heterozygosity_end ~ heterozygosity_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "B", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation
pearson_res <- cor.test(
df$heterozygosity_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
rm(list=ls(all=TRUE)) #clear R environment
#All of the following were done with recombination rate of 1e-7
#This one is for 8-500 ind, mating for 100 gen
#setwd("/tmp/server_data")
#This one is for 8-500 ind, mating for 5000 generations
#setwd("/tmp/server_data_model25000")
#This one is for 8-100 ind, mating for 1000 generations
#setwd("/tmp/server_data_model2_100_1000")
#This one is for 8-62 ind, mating for 100 gen
#setwd("/tmp/server_data_model2_62_100")
#This one is for 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_model2_62_100_r")
#This one is for a recombination rate of 1e-6 - 8-62 ind, mating for 100 Gen RANDOM
setwd("/tmp/server_data_1e-6_model2")
#This one is for a recombination rate of 1e-8 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-8_model2")
#This one is for a recombination rate of 1e-9 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-9_model2")
# find all the SLiM output files
files <- list.files(pattern = "model2_reps")
# loop through and extract metrics -> I want to extract relatedness at the beginning and heterozygosity at the end
#lapply applies following function to all the files
res_list <- lapply(files, function(f){
dat <- read.table(f, header = FALSE)  #no header in the files
data.frame(
relatedness_start   = dat[1, 2],
relatedness_end = dat[2,2],
heterozygosity_start = dat[1,3],
heterozygosity_end  = dat[2, 3]
)
})
# bind the values into one data.frame
df <- do.call(rbind, res_list)
par(mfrow = c(1,2))
# quick base‐R scatterplot
#First for starting relatedness to end heterozygosity
plot(
df$relatedness_start,
df$heterozygosity_end,
xlab = "Starting relatedness",
ylab = "End heterozygosity",
main = "Rel start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit (regression line)
abline(lm(heterozygosity_end ~ relatedness_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "A", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation -> test for significant correlqtion
pearson_res <- cor.test(
df$relatedness_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
# quick base‐R scatterplot
#Another one for starting heterozygosity to end heterozygosity
plot(
df$heterozygosity_start,
df$heterozygosity_end,
xlab = "Starting heterozygosity",
ylab = "End heterozygosity",
main = "Het start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit
abline(lm(heterozygosity_end ~ heterozygosity_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "B", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation
pearson_res <- cor.test(
df$heterozygosity_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
rm(list=ls(all=TRUE)) #clear R environment
#All of the following were done with recombination rate of 1e-7
#This one is for 8-500 ind, mating for 100 gen
#setwd("/tmp/server_data")
#This one is for 8-500 ind, mating for 5000 generations
#setwd("/tmp/server_data_model25000")
#This one is for 8-100 ind, mating for 1000 generations
#setwd("/tmp/server_data_model2_100_1000")
#This one is for 8-62 ind, mating for 100 gen
#setwd("/tmp/server_data_model2_62_100")
#This one is for 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_model2_62_100_r")
#This one is for a recombination rate of 1e-6 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-6_model2")
#This one is for a recombination rate of 1e-8 - 8-62 ind, mating for 100 Gen RANDOM
setwd("/tmp/server_data_1e-8_model2")
#This one is for a recombination rate of 1e-9 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-9_model2")
# find all the SLiM output files
files <- list.files(pattern = "model2_reps")
# loop through and extract metrics -> I want to extract relatedness at the beginning and heterozygosity at the end
#lapply applies following function to all the files
res_list <- lapply(files, function(f){
dat <- read.table(f, header = FALSE)  #no header in the files
data.frame(
relatedness_start   = dat[1, 2],
relatedness_end = dat[2,2],
heterozygosity_start = dat[1,3],
heterozygosity_end  = dat[2, 3]
)
})
# bind the values into one data.frame
df <- do.call(rbind, res_list)
par(mfrow = c(1,2))
# quick base‐R scatterplot
#First for starting relatedness to end heterozygosity
plot(
df$relatedness_start,
df$heterozygosity_end,
xlab = "Starting relatedness",
ylab = "End heterozygosity",
main = "Rel start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit (regression line)
abline(lm(heterozygosity_end ~ relatedness_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "A", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation -> test for significant correlqtion
pearson_res <- cor.test(
df$relatedness_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
# quick base‐R scatterplot
#Another one for starting heterozygosity to end heterozygosity
plot(
df$heterozygosity_start,
df$heterozygosity_end,
xlab = "Starting heterozygosity",
ylab = "End heterozygosity",
main = "Het start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit
abline(lm(heterozygosity_end ~ heterozygosity_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "B", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation
pearson_res <- cor.test(
df$heterozygosity_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
rm(list=ls(all=TRUE)) #clear R environment
#All of the following were done with recombination rate of 1e-7
#This one is for 8-500 ind, mating for 100 gen
#setwd("/tmp/server_data")
#This one is for 8-500 ind, mating for 5000 generations
#setwd("/tmp/server_data_model25000")
#This one is for 8-100 ind, mating for 1000 generations
#setwd("/tmp/server_data_model2_100_1000")
#This one is for 8-62 ind, mating for 100 gen
#setwd("/tmp/server_data_model2_62_100")
#This one is for 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_model2_62_100_r")
#This one is for a recombination rate of 1e-6 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-6_model2")
#This one is for a recombination rate of 1e-8 - 8-62 ind, mating for 100 Gen RANDOM
#setwd("/tmp/server_data_1e-8_model2")
#This one is for a recombination rate of 1e-9 - 8-62 ind, mating for 100 Gen RANDOM
setwd("/tmp/server_data_1e-9_model2")
# find all the SLiM output files
files <- list.files(pattern = "model2_reps")
# loop through and extract metrics -> I want to extract relatedness at the beginning and heterozygosity at the end
#lapply applies following function to all the files
res_list <- lapply(files, function(f){
dat <- read.table(f, header = FALSE)  #no header in the files
data.frame(
relatedness_start   = dat[1, 2],
relatedness_end = dat[2,2],
heterozygosity_start = dat[1,3],
heterozygosity_end  = dat[2, 3]
)
})
# bind the values into one data.frame
df <- do.call(rbind, res_list)
par(mfrow = c(1,2))
# quick base‐R scatterplot
#First for starting relatedness to end heterozygosity
plot(
df$relatedness_start,
df$heterozygosity_end,
xlab = "Starting relatedness",
ylab = "End heterozygosity",
main = "Rel start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit (regression line)
abline(lm(heterozygosity_end ~ relatedness_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "A", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation -> test for significant correlqtion
pearson_res <- cor.test(
df$relatedness_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
# quick base‐R scatterplot
#Another one for starting heterozygosity to end heterozygosity
plot(
df$heterozygosity_start,
df$heterozygosity_end,
xlab = "Starting heterozygosity",
ylab = "End heterozygosity",
main = "Het start vs Het end",
pch = 19,
cex = 0.4
)
# add a linear fit
abline(lm(heterozygosity_end ~ heterozygosity_start, data = df), col = "#54BFB7FF", lwd = 2)
text(x = par("usr")[1], y = par("usr")[4], labels = "B", font = 2, cex = 1.1, adj = c(-0.5, 1.5))
#par("usr") gives the plot coordinates (so top left corner of the graph - 1 & 4), then labels = ... gives the plot a label, and then make it bold and larger, and adj places the label correctly
# Pearson’s correlation
pearson_res <- cor.test(
df$heterozygosity_start,
df$heterozygosity_end,
method = "pearson"
)
print(pearson_res)
plot(
df$relatedness_start,
df$heterozygosity_start,
xlab = "Starting relatedness",
ylab = "starting heterozygosity",
main = "Relatedness vs Heterozygosity",
pch = 19,
cex = 0.4
)
# add a linear fit
abline(lm(heterozygosity_start ~ relatedness_start, data = df), col = "#54BFB7FF", lwd = 2)
# Pearson’s correlation
pearson_res <- cor.test(
df$relatedness_start,
df$heterozygosity_start,
method = "pearson"
)
print(pearson_res)
