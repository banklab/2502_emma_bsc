rel_mean_nrnr <- rowMeans(rel_matrix_nrnr)
#Now do the same for heterozygosity
het_matrix_nrnr <- sapply(rep_data_nrnr, function(df) df$heterozygosity)
het_mean_nrnr <- rowMeans(het_matrix_nrnr)
#And now again all this for the data of the model which has non-random mating selecting for non-relatedness (nrr)
files_nrr <- list.files(pattern = "_heterozygosity_nrr_")
length(files_nrr)
rep_data_nrr <- lapply(files_nrr, function(f) {
read.table(f, col.names = c("generation", "relatedness", "heterozygosity"))
})
rel_matrix_nrr <- sapply(rep_data_nrr, function(df) df$relatedness)
rel_mean_nrr <- rowMeans(rel_matrix_nrr)
het_matrix_nrr <- sapply(rep_data_nrr, function(df) df$heterozygosity)
het_mean_nrr <- rowMeans(het_matrix_nrr)
#And now again all this for the data of the model which has random mating (r)
files_r <- list.files(pattern = "_heterozygosity_r_")
length(files_r)
rep_data_r <- lapply(files_r, function(f) {
read.table(f, col.names = c("generation", "relatedness", "heterozygosity"))
}) #lapply: apply a function over a list
rel_matrix_r <- sapply(rep_data_r, function(df) df$relatedness)
rel_mean_r <- rowMeans(rel_matrix_r)
het_matrix_r <- sapply(rep_data_r, function(df) df$heterozygosity)
het_mean_r <- rowMeans(het_matrix_r)
# Adjust margins for right-side y-axis -> This will give me more space
par(mar = c(5, 4, 4, 6))
# === Plot Relatedness replicates for both models ===
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_het, max_rel * 1.05),  # Add 5% extra space for nicer layout
main = "Relatedness & Heterozygosity")
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
# === Overlay Heterozygosity ===
par(new = TRUE)
# Plot heterozygosity (no axes)
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(1, 0.6, 0.6, 0.1), axes = FALSE, xlab = "", ylab = "")
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.9, 0.5, 0.7, 0.1))
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.3, 0.5, 0.1))
# Mean heterozygosity lines
lines(generations, het_mean_nrnr, col = "tomato", lwd = 2)
lines(generations, het_mean_nrr, col = "deeppink", lwd = 2)
lines(generations, het_mean_r, col = "firebrick", lwd = 2)
# Add right-side axis
axis(side = 4)
mtext("Heterozygosity", side = 4, line = 3)
# === Add legend ===
legend("topleft",
legend = c("Relatedness nrnr", "Relatedness nrr", "Relatedness r", "Heterozygosity nrnr", "Heterozygosity nrr", "Heterozygosity r"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid", "tomato", "deeppink", "firebrick"),
lwd = 2, bty = "n", cex = 0.6)
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the acis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(0, max_rel))
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
#And now the exact same but for the heterozygosity values
# Combine both matrices into one big matrix to find global max
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(0, max_het))  # Add 5% extra space for nicer layout
# Model nrr: light green points
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, het_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, het_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, het_mean_r, col = "mediumorchid", lwd = 2)
mtext("Relatedness and Heterozygosity Over Time", side = 3, line = -2, outer = TRUE, cex = 1.2) #creates a shared main
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE,
legend = c("not-random not-related", "not-random related", "random"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid"),
lwd = 2, bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the acis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(0, max_rel))
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
#And now the exact same but for the heterozygosity values
# Combine both matrices into one big matrix to find global max
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het))  # Add 5% extra space for nicer layout
# Model nrr: light green points
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, het_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, het_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, het_mean_r, col = "mediumorchid", lwd = 2)
mtext("Relatedness and Heterozygosity Over Time", side = 3, line = -2, outer = TRUE, cex = 1.2) #creates a shared main
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE,
legend = c("not-random not-related", "not-random related", "random"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid"),
lwd = 2, bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the acis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_rel <- min(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_rel, max_rel))
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
#And now the exact same but for the heterozygosity values
# Combine both matrices into one big matrix to find global max
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het))  # Add 5% extra space for nicer layout
# Model nrr: light green points
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, het_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, het_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, het_mean_r, col = "mediumorchid", lwd = 2)
mtext("Relatedness and Heterozygosity Over Time", side = 3, line = -2, outer = TRUE, cex = 1.2) #creates a shared main
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE,
legend = c("not-random not-related", "not-random related", "random"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid"),
lwd = 2, bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
rm(list=ls(all=TRUE)) #clear R environment
options(scipen = 999) #scientific notation penalty, with this R does not use scientific notation for numbers
setwd("~/Documents/GitHub/2502_emma_bsc") #setting the working directory
reps <- 10
repetition <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
for(r in 1:reps){
slim_code_block <- paste0("slim -d repetition=", r, " relatedness_heterozygosity_nrnr.slim")
#slim_code_block
system(slim_code_block)#call the code block for slim in the terminal via bash, system invokes the OS command specified by command.
}
rm(list=ls(all=TRUE)) #clear R environment
options(scipen = 999) #scientific notation penalty, with this R does not use scientific notation for numbers
setwd("~/Documents/GitHub/2502_emma_bsc") #setting the working directory
reps <- 10
repetition <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
for(r in 1:reps){
slim_code_block <- paste0("slim -d repetition=", r, " relatedness_heterozygosity_nrr.slim")
#slim_code_block
system(slim_code_block)#call the code block for slim in the terminal via bash, system invokes the OS command specified by command.
}
rm(list=ls(all=TRUE)) #clear R environment
options(scipen = 999) #scientific notation penalty, with this R does not use scientific notation for numbers
setwd("~/Documents/GitHub/2502_emma_bsc") #setting the working directory
reps <- 10
repetition <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
for(r in 1:reps){
slim_code_block <- paste0("slim -d repetition=", r, " relatedness_heterozygosity_r.slim")
#slim_code_block
system(slim_code_block)#call the code block for slim in the terminal via bash, system invokes the OS command specified by command.
}
rm(list=ls(all=TRUE)) #clear R environment
files_nrnr <- list.files(pattern = "_heterozygosity_nrnr_")
length(files_nrnr)
#This will create a list of data frames, where every element is a replicate. Each replicate will have the column: Generation, Relatedness and heterozygosity.
rep_data_nrnr <- lapply(files_nrnr, function(f) {
read.table(f, col.names = c("generation", "relatedness", "heterozygosity"))
})
# Assume all replicates have the same generations
generations <- rep_data_nrnr[[1]]$generation
# Extract relatedness into a matrix: each column = one replicate
rel_matrix_nrnr <- sapply(rep_data_nrnr, function(df) df$relatedness)
#Specifically this tells R: Go through every element "df" in the list rep_data_nrnr, and extract the relatedness column.
# Compute mean relatedness per generation
rel_mean_nrnr <- rowMeans(rel_matrix_nrnr)
#Now do the same for heterozygosity
het_matrix_nrnr <- sapply(rep_data_nrnr, function(df) df$heterozygosity)
het_mean_nrnr <- rowMeans(het_matrix_nrnr)
#And now again all this for the data of the model which has non-random mating selecting for non-relatedness (nrr)
files_nrr <- list.files(pattern = "_heterozygosity_nrr_")
length(files_nrr)
rep_data_nrr <- lapply(files_nrr, function(f) {
read.table(f, col.names = c("generation", "relatedness", "heterozygosity"))
})
rel_matrix_nrr <- sapply(rep_data_nrr, function(df) df$relatedness)
rel_mean_nrr <- rowMeans(rel_matrix_nrr)
het_matrix_nrr <- sapply(rep_data_nrr, function(df) df$heterozygosity)
het_mean_nrr <- rowMeans(het_matrix_nrr)
#And now again all this for the data of the model which has random mating (r)
files_r <- list.files(pattern = "_heterozygosity_r_")
length(files_r)
rep_data_r <- lapply(files_r, function(f) {
read.table(f, col.names = c("generation", "relatedness", "heterozygosity"))
}) #lapply: apply a function over a list
rel_matrix_r <- sapply(rep_data_r, function(df) df$relatedness)
rel_mean_r <- rowMeans(rel_matrix_r)
het_matrix_r <- sapply(rep_data_r, function(df) df$heterozygosity)
het_mean_r <- rowMeans(het_matrix_r)
# Adjust margins for right-side y-axis -> This will give me more space
par(mar = c(5, 4, 4, 6))
# === Plot Relatedness replicates for both models ===
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_het, max_rel * 1.05),  # Add 5% extra space for nicer layout
main = "Relatedness & Heterozygosity")
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
# === Overlay Heterozygosity ===
par(new = TRUE)
# Plot heterozygosity (no axes)
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(1, 0.6, 0.6, 0.1), axes = FALSE, xlab = "", ylab = "")
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.9, 0.5, 0.7, 0.1))
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.3, 0.5, 0.1))
# Mean heterozygosity lines
lines(generations, het_mean_nrnr, col = "tomato", lwd = 2)
lines(generations, het_mean_nrr, col = "deeppink", lwd = 2)
lines(generations, het_mean_r, col = "firebrick", lwd = 2)
# Add right-side axis
axis(side = 4)
mtext("Heterozygosity", side = 4, line = 3)
# === Add legend ===
legend("topleft",
legend = c("Relatedness nrnr", "Relatedness nrr", "Relatedness r", "Heterozygosity nrnr", "Heterozygosity nrr", "Heterozygosity r"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid", "tomato", "deeppink", "firebrick"),
lwd = 2, bty = "n", cex = 0.6)
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the acis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_rel <- min(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_rel, max_rel))
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
#And now the exact same but for the heterozygosity values
# Combine both matrices into one big matrix to find global max
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het))  # Add 5% extra space for nicer layout
# Model nrr: light green points
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, het_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, het_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, het_mean_r, col = "mediumorchid", lwd = 2)
mtext("Relatedness and Heterozygosity Over Time", side = 3, line = -2, outer = TRUE, cex = 1.2) #creates a shared main
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE,
legend = c("not-random not-related", "not-random related", "random"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid"),
lwd = 2, bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
rel_mean_nrr
rel_mean_nrnr
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the acis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_rel <- min(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_rel, max_rel))
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
#And now the exact same but for the heterozygosity values
# Combine both matrices into one big matrix to find global max
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het))  # Add 5% extra space for nicer layout
# Model nrr: light green points
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, het_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, het_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, het_mean_r, col = "mediumorchid", lwd = 2)
mtext("Relatedness and Heterozygosity Over Time", side = 3, line = -2, outer = TRUE, cex = 1.2) #creates a shared main
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE,
legend = c("not-random not-related", "not-random related", "random"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid"),
lwd = 2, bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the acis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_rel <- min(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_rel, 0.25))
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
#And now the exact same but for the heterozygosity values
# Combine both matrices into one big matrix to find global max
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het))  # Add 5% extra space for nicer layout
# Model nrr: light green points
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, het_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, het_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, het_mean_r, col = "mediumorchid", lwd = 2)
mtext("Relatedness and Heterozygosity Over Time", side = 3, line = -2, outer = TRUE, cex = 1.2) #creates a shared main
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE,
legend = c("not-random not-related", "not-random related", "random"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid"),
lwd = 2, bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
par(mfrow = c(1, 2)) #To have 2 plots shown at once
par(mfrow = c(1, 2), oma = c(2, 0, 1, 0))  # oma = outer margin area (bottom, left, top, right), leaves space for a title
par(mgp = c(1.8, 0.7, 0)) #This is to decrease the distance of the acis labels to the axis.
par(cex.lab = 0.8, cex.axis = 0.7, cex.main = 1) #this helps me rescaling the size of the labels
# Combine both matrices into one big matrix to find global max
max_rel <- max(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
min_rel <- min(rel_matrix_nrnr, rel_matrix_nrr, rel_matrix_r)
# Model nrnr: light blue points
matplot(generations, rel_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Relatedness",
ylim = c(min_rel, max_rel))
# Model nrr: light green points
matpoints(generations, rel_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, rel_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, rel_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, rel_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, rel_mean_r, col = "mediumorchid", lwd = 2)
#And now the exact same but for the heterozygosity values
# Combine both matrices into one big matrix to find global max
max_het <- max(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
min_het <- min(het_matrix_nrnr, het_matrix_nrr, het_matrix_r)
# Model nrnr: light blue points
matplot(generations, het_matrix_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "Heterozygosity",
ylim = c(min_het, max_het))  # Add 5% extra space for nicer layout
# Model nrr: light green points
matpoints(generations, het_matrix_nrr, pch = 16,
col = rgb(0.6, 0.9, 0.6, 0.1))
# Model r: light purple points
matpoints(generations, het_matrix_r, pch = 16,
col = rgb(0.8, 0.7, 1, 0.1))
# === Mean relatedness lines ===
lines(generations, het_mean_nrnr, col = "cornflowerblue", lwd = 2)
lines(generations, het_mean_nrr, col = "mediumseagreen", lwd = 2)
lines(generations, het_mean_r, col = "mediumorchid", lwd = 2)
mtext("Relatedness and Heterozygosity Over Time", side = 3, line = -2, outer = TRUE, cex = 1.2) #creates a shared main
par(xpd = NA) #Allows drawing outside of the plot - this is for the legend
legend("bottom", inset = c(0, -0.6), horiz = FALSE,
legend = c("not-random not-related", "not-random related", "random"),
col = c("cornflowerblue", "mediumseagreen", "mediumorchid"),
lwd = 2, bty = "n", cex = 0.6)
#inset: Pushes it down below the plot
