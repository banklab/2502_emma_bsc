// This file will be the start of my simulation - I first have a big WF starting population (10'000 individuals)
//Then a bottleneck kicks in after 100'000 generations and sets the population size to 16 individuals (real scenario) or 1000 individuals (as a comparison) --> I chose this, because after 100'000 generations the population will be at equilibrium (10*n)
// I want to store those 16 individuals, such that i do not have to run this part over and over again. 
//This file is for a population which has a recombination rate of 1e-6

initialize() {
	initializeSLiMModelType("WF"); // means that population size can not change dynamically -> WF model
	//turning on pedigree tracking, as relatedness
	initializeSLiMOptions(keepPedigrees = T); // Track ancestry
	initializeMutationRate(1e-7); //defining mutation rate - based on data of the common kingfisher
	initializeMutationType("m1", 0.5, "f", 0.0); //mutation type m1 is has dominance coefficient 0.5 and is neutral (fitness 0.0)
	initializeGenomicElementType("g1", m1, 1.0); //genomic element type g1 is initialized with mutation type m1 and base mutation rate
	initializeGenomicElement(g1, 0, 99999); //g1 has length 10'000 bases, maybe change -> second genomic element?
	initializeRecombinationRate(1e-6); // specifies recombination rate --> No idea how it would look in a real population....
	
	initializeTreeSeq(); // Required for .trees output and pedigree tracking

	initializeSex("A"); //creates males and females in the population

}


1 early() {
	//defining population size at the beginning
	sim.addSubpop("p1", 10000); //large starting population of 10'000 individuals - sex ratio is even. 
}


//bottleneck kicks in after 100'000 generations (10*n until equilibrium is reached)


100000 early() {  
		p1.setSubpopulationSize(16);
}

100001 late() {
		sim.treeSeqOutput("16_1e-6_output.trees");
		sim.simulationFinished();
}

