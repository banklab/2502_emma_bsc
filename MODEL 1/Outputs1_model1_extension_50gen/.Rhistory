# Combine both matrices into one big matrix to find global max and min
max_het <- max(results_df_nrnr, results_df_nrr, results_df_r)
setwd("~/Documents/GitHub/2502_emma_bsc/Outputs1_model1_extension_50gen")
rm(list=ls(all=TRUE)) #clear R environment
files_nrnr <- list.files(pattern = "_nonrandom_notrelated_")
length(files_nrnr)
#install.packages("hierfstat")
library("hierfstat")
## make a dataframe to collect results
## each row in the dataframe corresponds to the results from a single SLiM simulation run
row_numbers <- seq(100001, 100050, by = 2)
#row_names <- paste(row_numbers, "reps", "seed", sep = ";")
results_df_nrnr <- matrix(NA ,nrow = (length(row_numbers)), ncol = length(files_nrnr))
rownames(results_df_nrnr) <- c(row_numbers)
dim(results_df_nrnr)
for(i in 1:length(files_nrnr)){
single_file <- files_nrnr[i] ## this is the name of a single SLiM result file
# Read the CSV file, ensure that it recognizes the header
df <- read.csv(single_file, header = TRUE)
# Ensure the column names are correct
colnames(df) <- c("cycle", "Heterozygosity")
# Match cycle numbers to the matrix column names
matched_indices <- match(df$cycle, rownames(results_df_nrnr))
# Assign heterozygosity values to the correct positions in results_df_r
results_df_nrnr[matched_indices,i] <- df$Heterozygosity
}
mean_nrnr <- rowMeans(results_df_nrnr, na.rm = TRUE)
#now the same for nonrandon related
files_nrr <- list.files(pattern = "_nonrandom_related_")
length(files_nrr)
#install.packages("hierfstat")
library("hierfstat")
## make a dataframe to collect results
## each row in the dataframe corresponds to the results from a single SLiM simulation run
row_numbers <- seq(100001, 100050, by = 2)
#row_names <- paste(row_numbers, "reps", "seed", sep = ";")
results_df_nrr <- matrix(NA ,nrow = (length(row_numbers)), ncol = length(files_nrr))
rownames(results_df_nrr) <- c(row_numbers)
dim(results_df_nrr)
for(i in 1:length(files_nrr)){
single_file <- files_nrr[i] ## this is the name of a single SLiM result file
# Read the CSV file, ensure that it recognizes the header
df <- read.csv(single_file, header = TRUE)
# Ensure the column names are correct
colnames(df) <- c("cycle", "Heterozygosity")
# Match cycle numbers to the matrix column names
matched_indices <- match(df$cycle, rownames(results_df_nrr))
# Assign heterozygosity values to the correct positions in results_df_r
results_df_nrr[matched_indices,i] <- df$Heterozygosity
}
mean_nrr <- rowMeans(results_df_nrr, na.rm = TRUE)
#and for random
files_r <- list.files(pattern = "_random_")
length(files_r)
#install.packages("hierfstat")
library("hierfstat")
## make a dataframe to collect results
## each row in the dataframe corresponds to the results from a single SLiM simulation run
row_numbers <- seq(100001, 100050, by = 2)
#row_names <- paste(row_numbers, "reps", "seed", sep = ";")
results_df_r <- matrix(NA ,nrow = (length(row_numbers)), ncol = length(files_r))
rownames(results_df_r) <- c(row_numbers)
dim(results_df_r)
for(i in 1:length(files_r)){
single_file <- files_r[i] ## this is the name of a single SLiM result file
# Read the CSV file, ensure that it recognizes the header
df <- read.csv(single_file, header = TRUE)
# Ensure the column names are correct
colnames(df) <- c("cycle", "Heterozygosity")
# Match cycle numbers to the matrix column names
matched_indices <- match(df$cycle, rownames(results_df_r))
# Assign heterozygosity values to the correct positions in results_df_r
results_df_r[matched_indices,i] <- df$Heterozygosity
}
mean_r <- rowMeans(results_df_r, na.rm = TRUE)
# Combine both matrices into one big matrix to find global max and min
max_het <- max(results_df_nrnr, results_df_nrr, results_df_r)
min_het <- min(results_df_nrnr, results_df_nrr, results_df_r)
# Model nrnr: light blue points
#Here i dont have to transpose the data, since each column is a separate data series
matplot( results_df_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "heterozygosity",
ylim = c(min_het, max_het))
# Model nrr: light green points
matpoints(results_df_nrr, pch = 16, col = rgb(0.6, 0.9, 0.6, 0.1)) #adding points to the existing plot from above
# Model r: light purple points
matpoints( results_df_r, pch = 16, col = rgb(0.8, 0.7, 1, 0.1)) #again
# === adding Mean relatedness lines to the plot ===
lines(generations, mean_nrnr, col = "cornflowerblue", lwd = 2)
# Combine both matrices into one big matrix to find global max and min
max_het <- max(results_df_nrnr, results_df_nrr, results_df_r)
min_het <- min(results_df_nrnr, results_df_nrr, results_df_r)
# Model nrnr: light blue points
#Here i dont have to transpose the data, since each column is a separate data series
matplot( results_df_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.1),
xlab = "Generation", ylab = "heterozygosity",
ylim = c(min_het, max_het))
# Model nrr: light green points
matpoints(results_df_nrr, pch = 16, col = rgb(0.6, 0.9, 0.6, 0.1)) #adding points to the existing plot from above
# Model r: light purple points
matpoints( results_df_r, pch = 16, col = rgb(0.8, 0.7, 1, 0.1)) #again
# === adding Mean relatedness lines to the plot ===
lines( mean_nrnr, col = "cornflowerblue", lwd = 2)
lines( mean_nrr, col = "mediumseagreen", lwd = 2)
lines( mean_r, col = "mediumorchid", lwd = 2)
# Combine both matrices into one big matrix to find global max and min
max_het <- max(results_df_nrnr, results_df_nrr, results_df_r)
min_het <- min(results_df_nrnr, results_df_nrr, results_df_r)
# Model nrnr: light blue points
#Here i dont have to transpose the data, since each column is a separate data series
matplot( results_df_nrnr, type = "p", pch = 16,
col = rgb(0.5, 0.7, 1, 0.2),
xlab = "Generation", ylab = "heterozygosity",
ylim = c(min_het, max_het))
# Model nrr: light green points
matpoints(results_df_nrr, pch = 16, col = rgb(0.6, 0.9, 0.6, 0.2)) #adding points to the existing plot from above
# Model r: light purple points
matpoints( results_df_r, pch = 16, col = rgb(0.8, 0.7, 1, 0.2)) #again
# === adding Mean relatedness lines to the plot ===
lines( mean_nrnr, col = "cornflowerblue", lwd = 2)
lines( mean_nrr, col = "mediumseagreen", lwd = 2)
lines( mean_r, col = "mediumorchid", lwd = 2)
